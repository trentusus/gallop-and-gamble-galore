import { trackSelfDescribingEvent, CommonEventProperties, SelfDescribingJson } from '@snowplow/browser-tracker';
// Automatically generated by Snowtype

/**
 * Entity capturing the x and y coordinates of a mouse click within the viewport
 */
export type ClickCoordinates = {
    /**
     * The horizontal coordinate of the mouse click relative to the viewport.
     */
    x?: number;
    /**
     * The vertical coordinate of the mouse click relative to the viewport.
     */
    y?: number;
    [property: string]: any;
}

/**
 * Entity representing a bet on a horse race
 */
export type HorseRaceBet = {
    /**
     * Amount of money wagered in the bet
     */
    bet_amount?: number | null;
    /**
     * Type of bet placed on the horse
     */
    bet_type?: BetType;
    /**
     * Name of the horse
     */
    horse?: string;
    /**
     * Age of the horse
     */
    horse_age?: number | null;
    /**
     * Weight of the horse in kilograms
     */
    horse_weight?: number | null;
    /**
     * Name of the jockey
     */
    jockey?: string;
    /**
     * Odds for the horse to place
     */
    place_odds?: number | null;
    /**
     * Amount the bettor could win if successful
     */
    potential_winnings?: number | null;
    /**
     * Distance of the race in meters
     */
    race_distance?: number | null;
    /**
     * Location of the race
     */
    race_location?: string;
    /**
     * Name of the race
     */
    race_name?: string;
    /**
     * Start time of the race in ISO 8601 format
     */
    race_start_time?: Date;
    /**
     * Name of the horse trainer
     */
    trainer?: string;
    /**
     * Odds for the horse to win
     */
    win_odds?: number | null;
    [property: string]: any;
}

/**
 * Type of bet placed on the horse
 */
export type BetType = "win" | "place";

/**
 * Entity representing the current screen or view within a horse racing betting flow
 */
export type HorseRaceScreen = {
    /**
     * The screen or view the user is currently on within the horse race experience.
     */
    screen_name?: ScreenName;
    [property: string]: any;
}

/**
 * The screen or view the user is currently on within the horse race experience.
 */
export type ScreenName = "VIEWING_RACES" | "PLACING_BET" | "BET_CONFIRMED" | "LOGIN";


type ContextsOrTimestamp<T = any> = Omit<CommonEventProperties<T>, 'context'> & { context?: SelfDescribingJson<T>[] | null | undefined }
/**
 * Track a Snowplow event for ClickCoordinates.
 * Entity capturing the x and y coordinates of a mouse click within the viewport
 */
export function trackClickCoordinates<T extends {} = any>(clickCoordinates: ClickCoordinates & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = clickCoordinates;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snplow.sales.aws/click_coordinates/jsonschema/1-0-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow ClickCoordinates entity.
 */
export function createClickCoordinates(clickCoordinates: ClickCoordinates){
    return {
        schema: 'iglu:com.snplow.sales.aws/click_coordinates/jsonschema/1-0-0',
        data: clickCoordinates
    }
}
/**
 * Track a Snowplow event for HorseRaceBet.
 * Entity representing a bet on a horse race
 */
export function trackHorseRaceBet<T extends {} = any>(horseRaceBet: HorseRaceBet & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = horseRaceBet;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snplow.sales.aws/horse_race_bet/jsonschema/1-2-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow HorseRaceBet entity.
 */
export function createHorseRaceBet(horseRaceBet: HorseRaceBet){
    return {
        schema: 'iglu:com.snplow.sales.aws/horse_race_bet/jsonschema/1-2-0',
        data: horseRaceBet
    }
}
/**
 * Track a Snowplow event for HorseRaceScreen.
 * Entity representing the current screen or view within a horse racing betting flow
 */
export function trackHorseRaceScreen<T extends {} = any>(horseRaceScreen: HorseRaceScreen & ContextsOrTimestamp<T>, trackers?: string[]){
    const { context, timestamp, ...data } = horseRaceScreen;
    const event: SelfDescribingJson = {
        schema: 'iglu:com.snplow.sales.aws/horse_race_screen/jsonschema/1-1-0',
        data
    };

    trackSelfDescribingEvent({
        event,
        context,
        timestamp,
    }, trackers);
}

/**
 * Creates a Snowplow HorseRaceScreen entity.
 */
export function createHorseRaceScreen(horseRaceScreen: HorseRaceScreen){
    return {
        schema: 'iglu:com.snplow.sales.aws/horse_race_screen/jsonschema/1-1-0',
        data: horseRaceScreen
    }
}



